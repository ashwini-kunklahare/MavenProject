<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="47679" started-at="2020-05-09T17:42:01Z" finished-at="2020-05-09T17:42:48Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="47679" started-at="2020-05-09T17:42:01Z" finished-at="2020-05-09T17:42:48Z">
      <class name="Practice.Guru99Test">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Practice.Guru99Test@2ed0fbae]" name="setUp" is-config="true" duration-ms="23163" started-at="2020-05-09T17:42:01Z" finished-at="2020-05-09T17:42:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyTitleOfTheHomePage()[pri:0, instance:Practice.Guru99Test@2ed0fbae]" name="verifyTitleOfTheHomePage" duration-ms="208" started-at="2020-05-09T17:42:24Z" finished-at="2020-05-09T17:42:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitleOfTheHomePage -->
        <test-method status="PASS" signature="verifyTitleOfTheMobilePage()[pri:1, instance:Practice.Guru99Test@2ed0fbae]" name="verifyTitleOfTheMobilePage" duration-ms="6204" started-at="2020-05-09T17:42:24Z" depends-on-methods="Practice.Guru99Test.verifyTitleOfTheHomePage" finished-at="2020-05-09T17:42:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitleOfTheMobilePage -->
        <test-method status="FAIL" signature="verifyProductsSortingByName()[pri:2, instance:Practice.Guru99Test@2ed0fbae]" name="verifyProductsSortingByName" duration-ms="2801" started-at="2020-05-09T17:42:30Z" finished-at="2020-05-09T17:42:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at Practice.Guru99Test.verifyProductsSortingByName(Guru99Test.java:72)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductsSortingByName -->
        <test-method status="PASS" signature="verifyCostOfProduct()[pri:3, instance:Practice.Guru99Test@2ed0fbae]" name="verifyCostOfProduct" duration-ms="14147" started-at="2020-05-09T17:42:33Z" finished-at="2020-05-09T17:42:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCostOfProduct -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Practice.Guru99Test@2ed0fbae]" name="tearDown" is-config="true" duration-ms="825" started-at="2020-05-09T17:42:47Z" finished-at="2020-05-09T17:42:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Practice.Guru99Test -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
